syntax = "proto3";

package timingsystem;

import "google/protobuf/wrappers.proto";

service TimingSystem {
    rpc CreateCompetition (CreateCompetitionRequest) returns(CommandReply) {}
    rpc RegisterNextCar (RegisterNextCarRequest) returns (CommandReply) {}
    rpc Start (StartRequest) returns (CommandReply) {}
    rpc Stop (StopRequest) returns (CommandReply) {}

    rpc GetResults (GetResultsRequest) returns (GetResultsReply) {}
    rpc GetCurrentTracks (GetCurrentTracksRequest) returns (GetCurrentTracksReply) {}
    rpc GetStateTree (GetStateTreeRequest) returns (GetStateTreeReply) {}
    rpc GetRegisteredNextCar (GetRegisteredNextCarRequest) returns (GetRegisteredNextCarReply) {}
    rpc SubscribeStateChange (SubscribeStateChangeRequest) returns(stream SubscribeStateChangeReply) {}
}

message CommandReply {
    
}

message CreateCompetitionRequest {
    uint64 timestamp = 2;
    string competitionConfigurationId = 1;
}

message RegisterNextCarRequest {
    uint64 timestamp = 3;
    string carId = 1;
    string trackId = 2;
}

message StartRequest {
    uint64 timestamp = 3;
    string trackId = 1;
    google.protobuf.StringValue carId = 2;
}

message StopRequest {
    uint64 timestamp = 3;
    string trackId = 1;
    google.protobuf.StringValue carId = 2;
}

message GetCurrentTracksRequest {
    
}

message GetCurrentTracksReply {
    repeated string trackId = 1;
}

message GetStateTreeRequest {
    
}

message GetStateTreeReply {
    string state = 1;
}

message GetRegisteredNextCarRequest {
    string trackId = 1;
}

message GetRegisteredNextCarReply {
    google.protobuf.StringValue carId = 1;
}

message GetResultsRequest {
    
}

message GetResultsReply {
    repeated TimeResult results = 1;
}

message TimeResult {
    string carId = 1;
    uint64 time = 2;
}

message SubscribeStateChangeRequest {
    
}

message SubscribeStateChangeReply {
    
}
